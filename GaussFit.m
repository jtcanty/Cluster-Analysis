function [fitresult, gof] = createFit(x_axis,y_axis, H)
%CREATEFIT(X_AXIS,H)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x_axis
%      Y Input : x_axis
%      Z Output: H
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 28-Aug-2015 20:41:07


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( x_axis, y_axis, H );

% Set up fittype and options.
ft = fittype( 'p*exp(-((cos(f)^2/(2*g^2) + sin(f)^2/(2*h^2))*(x-d).^2+2*(-sin(2*f)/(4*g^2) + sin(2*f)/(4*h^2))*(x-d).*(y-e)+(sin(f)^2/(2*g^2) + cos(f)^2/(2*h^2))*(y-e).^2))', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.StartPoint = [0 0 0 50 50 50];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, [xData, yData], zData );
legend( h, 'Gaussian Fit to Cluster', 'Raw Data', 'Location', 'NorthEast' );
% Label axes
xlabel 'Y axis'
ylabel 'X axis'
zlabel Histogram
grid on
view( -37.5, 44.0 );


